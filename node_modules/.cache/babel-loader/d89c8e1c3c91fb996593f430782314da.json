{"ast":null,"code":"require('./config/mongoose');\n\nconst express = require('express');\n\nconst path = require('path');\n\nconst app = express();\n\nconst logger = require('morgan');\n\nconst product = require('./routes/routes');\n\napp.use(logger('dev'));\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json()); // app.use('/public', express.static(path.join(__dirname, 'uploads')));\n\napp.use('/api/v1', product);\napp.use((req, res, next) => {\n  res.status(404);\n  res.send({\n    status: 'Failed',\n    message: 'Resource ' + req.originalUrl + ' Not Found'\n  });\n});\napp.listen(3000, () => console.log(\"Server is up and running : http://localhost:3000\"));","map":{"version":3,"sources":["C:/laragon/www/react-express-cruds-template-main/backend/server.js"],"names":["require","express","path","app","logger","product","use","urlencoded","extended","json","req","res","next","status","send","message","originalUrl","listen","console","log"],"mappings":"AAAAA,OAAO,CAAC,mBAAD,CAAP;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,GAAG,GAAGF,OAAO,EAAnB;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAOK,OAAO,GAAGL,OAAO,CAAC,iBAAD,CAAxB;;AAEAG,GAAG,CAACG,GAAJ,CAAQF,MAAM,CAAC,KAAD,CAAd;AACAD,GAAG,CAACG,GAAJ,CAAQL,OAAO,CAACM,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAnB,CAAR;AACAL,GAAG,CAACG,GAAJ,CAAQL,OAAO,CAACQ,IAAR,EAAR,E,CACA;;AACAN,GAAG,CAACG,GAAJ,CAAQ,SAAR,EAAmBD,OAAnB;AACAF,GAAG,CAACG,GAAJ,CAAQ,CAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAkB;AACtBD,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX;AACAF,EAAAA,GAAG,CAACG,IAAJ,CAAS;AACLD,IAAAA,MAAM,EAAE,QADH;AAELE,IAAAA,OAAO,EAAE,cAAaL,GAAG,CAACM,WAAjB,GAA+B;AAFnC,GAAT;AAIH,CAND;AAOAb,GAAG,CAACc,MAAJ,CAAW,IAAX,EAAiB,MAAKC,OAAO,CAACC,GAAR,CAAY,kDAAZ,CAAtB","sourcesContent":["require('./config/mongoose');\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\nconst logger = require('morgan');\r\nconst  product = require('./routes/routes');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.urlencoded({extended: true}));\r\napp.use(express.json());\r\n// app.use('/public', express.static(path.join(__dirname, 'uploads')));\r\napp.use('/api/v1', product);\r\napp.use((req, res, next)=>{\r\n    res.status(404);\r\n    res.send({\r\n        status: 'Failed',\r\n        message: 'Resource '+ req.originalUrl + ' Not Found'\r\n    })\r\n})\r\napp.listen(3000, ()=> console.log(\"Server is up and running : http://localhost:3000\"));"]},"metadata":{},"sourceType":"script"}